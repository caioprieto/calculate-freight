c
params[:prova]
c
params[:word][:word_type]
params[:word][:tema]
params[:word, :tema]
params[:word]
params[:tema]
c
current_user.cursos.where(id: params[:id]).first.modulos.count
current_user.cursos.where(id: params[:id]).first.modulos
current_user.cursos.where(id: params[:id]).modulos
current_user.cursos.where(id: params[:id]).first
current_user.cursos.where(id: params[:id]).count
current_user.cursos.where(id: params[:id]).first
current_user.cursos.where(id: params[:id]).count
current_user.cursos.where(id: params[:id])
current_user.cursos
current_user.cursos.count
current_user.cursos
current_user
@curso
@curso.tema
@curso
@curso.modulos
@curso
c
old_word_id.present?
n
!curso.word_ids.include?(new_word_id)
curso.word_ids
!curso.word_ids
!curso.word_ids.include?(new_word_id)
new_word_id
old_word_id
n
c
n
curso.aulas.where.not(word_id: nil)
curso.aulas
curso.aulas.where(word_id: old_word_id).exists?
curso.aulas.where(word_id: old_word_id)
curso.aulas.where(word_id: old_word_id).exists?
n
new_word_id
old_word_id
n
!curso.word_ids.include?(new_word_id)
new_word_id.present?
n
word_id
word_id_before_last_save
c
word_id_changed?
word_id_was
word_id
c
word_id_was
word_id
c
word_id_was
word_id
c
word_id_was
word_id
c
word_id_was
word_id_old?
word_id_old
word_id_changed?
word_id
curso_word_ids.include?(word_id)
c
curso_word_ids.index(word_id)
word_id
curso_word_ids
c
curso.word_ids
curso.words_ids
curso.words
word_id
curso
c
curso
curso_id
c
word_id
self
c
(total_aulas_vistas / total_aulas) * 100
(total_aulas_vistas / total_aulas) * 100)
total_aulas
total_aulas_vistas
((total_aulas_vistas / total_aulas) * 100).to_i
c
((total_aulas_vistas / total_aulas) * 100).to_i
(total_aulas_vistas / total_aulas) * 100).to_i
((total_aulas_vistas / total_aulas) * 100).to_i
]
((total_aulas_vistas / total_aulas) * 100).to_i
((total_aulas_vistas / total_aulas) * 100).to_i)
c
user.user_aulas.where(curso_id: curso.id, watched: true).count
user.user_aulas.where(curso_id: curso.id, watched: true)
c
user.user_aulas.where(curso_id: curso.id, watched: true)
user.user_aulas.where(curso_id: curso.id, watched: true).count
user.user_aulas.where(curso_id: curso.id, watched: true)
c
user.user_aulas
user.user_aulas.where(watched: true)
user.user_aulas.where(curso_id: curso.id, watched: true)
c
user.user_aulas.where(curso_id: curso.id, watched: true)
user.user_aulas.where(curso_id: curso.id, watched: true).count
user.user_aulas.where(curso_id: curso.id, watched: true)
c
user_aulas.lastc
user_aulas.last
user_aulas
self.user_aulas.where(watched: true)
self.user_aulas.where(watched: true).pluck(:progress)
self.user_aulas.where(watched: true).pluck(:progresso)
self.user_aulas.where(watched: true).pluck(:progress)
self.user_aulas.where(watched: true)
self.user_aulas.where(watched: true).count
self.user_aulas.where(watched: true)
self.user_aulas
self.watched_aulas
self.watched_aulas.pluck(:progress)
self.watched_aulas.pluck(:progresso)
self.watched_aulas.count
self.watched_aulas
self.cursos
self
c
Word.where(id: @curso.aulas.where.not(word_id: nil).pluck(:word_id)).count
Word.where(id: @curso.aulas.where.not(word_id: nil).pluck(:word_id))
c
@curso.update!(curso_params)
n
params[:curso]
c
@user.pedidos
@user.pedidos.count
@user.pedidos
@user
c
user.progress(curso)
c
user.progress(curso)
c
user_curso.recalculate_progress
user_curso = user_aula.user.user_cursos.where(curso_id: curso_id).first
curso_id = user_aula.aula.modulo.curso_id
c
flash[:alert] = "Este curso j√° foi comprado!"
n
c
cart.save
c
cart
cart.positive?
cart.success?
@cart.cart_cursos.create(curso_id: params[:curso_id])
c
cart.user.cursos.where(id: curso_id).present?
cart.user.cursos.where(id: curso_id)
cart.user.cursos
cart.user.cursos.include(curso)
curso
cart.user.cursos
cart.user
self
c
pluck(:id)
cart_cursos.pluck(:id)
cart.cursos.pluck(:id)
cursos.pluck(:id)
cart.user.cursos.pluck(:id)
c
user
current_user
c
params[:code]
c
n
Cart.find(cart_id).cursos
c
cart
cart.cursos
n
c
pedido.finalizar
n
pedido.liberar_curso
c
n
c
UserCurso.last
n
curso
cart.cursos
n
UserCurso.last
UserCurso
pedido.liberar_curso
c
UserCurso
cart.cursos.ids
cart.cursos.pluck(:id)
cart.cursos.collect(&:id)
cart.cursos.collect(&:curso_id)
cart.collect(&:cursos_id)
cart.map(&:cursos_id)
cart.map(:&cursos_id)
cart.map(&:cursos_id)
cart.cursos
cart
cursos
self
c
@cart.cart_cursos.where(curso_id: curso_id).last.destroy
@cart.cart_cursos.where(curso_id: curso_id).destroy
@cart.cart_cursos.where(curso_id: curso_id).destroy!
@cart.cart_cursos.where(curso_id: curso_id).destroy
@cart.cart_cursos.where(curso_id: curso_id)
@cart.joins(:cart_cursos).where(curso_id: curso_id)
@cart.joins(:cart_cursos).where(curso_id: curso_id } )
@cart.joins(:cart_cursos).where*curso_id: curso_id } )
@cart.joins(:cart_cursos).where(cursos: { curso_id: curso_id } )
@cart.joins(:cursos).where(cursos: { curso_id: curso_id } )
@cart.left_joins(:cursos).where(cursos: { curso_id: curso_id } )
@cart.joins(:cursos).where(cursos: { curso_id: curso_id } )
@cart.cursos.find_by(curso_id: curso_id)
@cart.cursos
@cart.delete(curso_id)
@cart
curso_id = params[:curso_id]
cart_id = params[:cart_id]
c
ApplicationControllerc
c
@cart
c
user_aulas.order(:updated_at).last.aula.modulo.curso
c
user_aulas.last
user_aulas
seen_aulas.last
seen_aulas
seen_aulas.where(id: total_aulas.map(&:id)).count
seen_aulas.where(id: total_aulas.map(&:id))
total_aulas.map(&:id)
seen_aulas.where(id: total_aulas.map(&:id))
n
